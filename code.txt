from pygame import *
import random 
window = display.set_mode((1260, 900))
display.set_caption('Войнушка 1939г.')

galaxy = transform.scale(image.load('galaxy-night-view.jpg'),(1260, 900))

lost = 0

win = 0



rel_time = False

class GameSprite(sprite.Sprite):
    def __init__(self, player_image, player_x, player_y, player_speed, width, height):
        super().__init__()
        self.image = transform.scale(image.load(player_image),(width, height))
        self.speed = player_speed
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y
    def reset(self):
        window.blit(self.image,(self.rect.x, self.rect.y))

class Player(GameSprite):
    def __init__(self, player_image, player_x, player_y, player_speed, width, height):
        super().__init__(player_image, player_x, player_y, player_speed, width, height)
        self.lost = lost
        self.last_shot = 0
        self.num_fire = 0
        self.cooldown = 0
    def update(self):
        keys = key.get_pressed()
        if keys[K_LEFT] and self.rect.x > 5:
            self.rect.x -= self.speed
        if keys[K_RIGHT] and self.rect.x < 1134:
            self.rect.x += self.speed
        if keys[K_SPACE]:
            current_time = time.get_ticks()
            if current_time - self.last_shot > 250: 
                if self.num_fire < 5:
                    self.fire()
                    self.last_shot = current_time
                    self.num_fire += 1
        if self.num_fire >= 5 and not self.rel_time:
            self.rel_time = True
            self.cooldown = time.get_ticks( )            
        if self.rel_time:
            current_time = time.get_ticks()
            if current_time - self.cooldown > 3000:
                self.num_fire = 0
                self.rel_time = False
            
    def fire(self):
            bullet = Bullet('bullet.png', self.rect.x + (self.rect.width - 5) // 2, 738, 15, 9, 54)
            bullets.add(bullet)
            pew.set_volume(0.09)
            pew.play()


class Enemy(GameSprite):
    def __init__(self, player_image, player_x, player_y, player_speed, width, height):
        super().__init__(player_image, player_x, player_y, player_speed, width, height)
        self.onscreen = False
    def respawn(self):
        self.rect.x = random.randint(0, 1116)
        self.rect.y = -100
    def update(self):
        self.rect.y += self.speed
        if self.rect.y > 900:
            if self.onscreen:
                rocket.lost += 1
            self.respawn()
        elif self.rect.y >= 0:
            self.onscreen = True
                

class Bullet(GameSprite):
    def update(self):
        self.rect.y -= self.speed
        if self.rect.y < 0:
                self.kill()


rocket = Player('rocket.png', 531, 738, 16, 113, 158)
rocket.rel_time = False

bullets = sprite.Group()
ufos = sprite.Group()
asteroids = sprite.Group()

for i in range(5):
    ufo = Enemy('ufo.png', 630, 1100, 3, 144, 90)
    ufos.add(ufo)

for i in range(3):
    asteroid = Enemy('asteroid.png', 650, 1000, 1, 100, 100)
    asteroids.add(asteroid)

mixer.init()
mixer.music.load('GalacticRap.mp3')
mixer.music.set_volume(0.1)
mixer.music.play(-1)
pew = mixer.Sound('fire.ogg')

font.init()
font1 = font.SysFont('Arial', 40)
font2 = font.SysFont('Arial', 70)

cooldown = font1.render('Wait, reload...', True, (74, 0, 0))

finish = 0
game = True
while game:
    window.blit(galaxy,(0,0))
    
    counter = font1.render(f'Пропущено: {rocket.lost}', True, (255, 255, 255))
    score = font1.render(f'Счёт: {win}', True, (255, 255, 255))
    

    window.blit(counter, (0,30))
    window.blit(score, (0,0))

    if rocket.rel_time:
        window.blit(cooldown, (600, 850))

    for e in event.get():
        if e.type == QUIT:
            game = False
    if finish == 0:
        asteroids.draw(window)
        bullets.draw(window)
        ufos.draw(window)
        rocket.reset()
        
        sprites_list = sprite.groupcollide(ufos, bullets, False, True)
        ufos_list = sprite.spritecollide(rocket, ufos, False)
        asteroids_list1 = sprite.spritecollide(rocket, asteroids, False)
        asteroids_list2 = sprite.groupcollide(asteroids, bullets, False, True)

        for ufo in sprites_list:
            win += 1
            ufo.respawn()
        
        if win >= 10:
            finish = 1
        
        if rocket.lost >= 3 or ufos_list or asteroids_list1:
            finish = -1

        asteroids.update()    
        ufos.update()
        bullets.update()
        rocket.update()
        
        
    elif finish == 1:
        win_txt = font2.render('YOU WIN', True, (61, 254, 93))
        win_txt_rect = win_txt.get_rect(center=(630, 450))
        window.blit(win_txt, win_txt_rect)
    
    elif finish == -1:
        lose_txt = font2.render('YOU LOSE', True, (211, 84, 85))
        lose_txt_rect = lose_txt.get_rect(center=(630, 450))
        window.blit(lose_txt, lose_txt_rect)

    display.update()

    clock = time.Clock()
    FPS = 60
    clock.tick(FPS)